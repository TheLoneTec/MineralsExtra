<?xml version="1.0" encoding="UTF-8"?>
<Defs>

    <ThingDef Name="ZF_ChalkBase" ParentName="ZF_UglyRockBase">
      <defName>ZF_ChalkBase</defName>
      <label>Chalk Deposit</label>
      <description>Chalk is a fine-graned, soft, and porous type of limestone, formed from the compressed shells of microscopic sea life.</description>
      <graphicData>
        <color>(230,230,230)</color>
      </graphicData>
      <statBases>
        <MaxHitPoints>1600</MaxHitPoints>
      </statBases>
      <building>
        <mineableThing>ZF_ChunkChalk</mineableThing>
        <mineableDropChance>0.4</mineableDropChance>
	    <buildingTags>
		    <li>BaseRock</li>
	    </buildingTags>
      </building>
    </ThingDef>

    <ThingDef Name="ZF_WeatheredChalk" ParentName="WeatheredRockBase" Class="Minerals.ThingDef_StaticMineral">
      <defName>ZF_WeatheredChalk</defName>
      <label>Weathered Chalk</label>
      <description>Chalk is a fine-graned, soft, and porous type of limestone, formed from the compressed shells of microscopic sea life.</description>
      <graphicData>
        <texPath>Things/Rock/WeatheredSandstone</texPath>
        <color>(230,230,230)</color>
      </graphicData>
      <uiIconPath>Things/Rock/WeatheredSandstone/WeatheredSandstoneA</uiIconPath>
      <randomColorsOne>
        <li>(230,230,230)</li>
        <li>(232,230,230)</li>
        <li>(230,232,230)</li>
        <li>(230,230,232)</li>
      </randomColorsOne>
      <randomColorsTwo>
        <li>(225,200,180)</li>
        <li>(227,200,180)</li>
        <li>(225,202,180)</li>
        <li>(225,200,182)</li>
      </randomColorsTwo>
      <statBases>
        <MaxHitPoints>600</MaxHitPoints>
        <Flammability>0</Flammability>
        <Beauty>3</Beauty>
      </statBases>
      <building>
        <mineableThing>ZF_ChunkChalk</mineableThing>
        <mineableDropChance>0.3</mineableDropChance>
      </building>
      <!--How far away it can spawn from an existing location-->
      <!-- Even though it is a static crystal, the map initialization uses "reproduction" to make clusters-->
      <spawnRadius>1</spawnRadius>
      <!-- The probability that this mineral type will be spawned at all on a given map -->
      <perMapProbability>1</perMapProbability>
      <!--For a given map, the minimum/maximum probablility a cluster will spawn for every possible location -->
      <minClusterProbability>0.01</minClusterProbability>
      <maxClusterProbability>0.02</maxClusterProbability>
      <!-- How  many squares each cluster will be -->
      <minClusterSize>1</minClusterSize>
      <maxClusterSize>5</maxClusterSize>
      <!-- The range of starting sizes of individuals in clusters -->
      <initialSizeMin>1</initialSizeMin>
      <initialSizeMax>1</initialSizeMax>
      <!-- How much initial sizes of individuals randomly vary -->
      <initialSizeVariation>.3</initialSizeVariation>
      <!-- The terrains this can appear on. The default is rocky terrains-->
      <allowedTerrains>
  		</allowedTerrains>
      <!-- The terrains this must be near to, but not necessarily on -->
      <neededNearbyTerrains>
        <li>ZF_ChalkBase_Rough</li>
      </neededNearbyTerrains>
      <!-- how far away it can be from needed nearby terrains-->
      <neededNearbyTerrainRadius>1</neededNearbyTerrainRadius>
      <!-- If true, growth rate and initial size depends on distance from needed terrains -->
      <neededNearbyTerrainSizeEffect>false</neededNearbyTerrainSizeEffect>
      <!-- Other resources it might drop -->
      <randomlyDropResources>
        <li>
          <ResourceDefName>ZF_SharpStoneShard</ResourceDefName>
          <DropProbability>0.03</DropProbability>
          <CountPerDrop>1</CountPerDrop>
          <MinMiningSkill>4</MinMiningSkill>
        </li>
        <li>
          <ResourceDefName>ZF_ChunkFlint</ResourceDefName>
          <DropProbability>0.03</DropProbability>
          <CountPerDrop>1</CountPerDrop>
        </li>
        <li>
          <ResourceDefName>SmallFossil</ResourceDefName>
          <DropProbability>0.03</DropProbability>
          <CountPerDrop>1</CountPerDrop>
          <MinMiningSkill>10</MinMiningSkill>
        </li>
        <li>
          <ResourceDefName>CrushedStone</ResourceDefName>
          <DropProbability>1</DropProbability>
          <CountPerDrop>5</CountPerDrop>
          <WasteProduct>true</WasteProduct>
        </li>
      </randomlyDropResources>
      <!-- Things this mineral replaces when a map is initialized -->
      <ThingsToReplace>
        <li>ZF_ChalkBase</li>
      </ThingsToReplace>
      <!-- Tags which determine how some options behave  -->
      <tags>
        <li>rock</li>
        <li>wall</li>
        <li>weathered</li>
      </tags>
      <!-- How easy it is to mine -->
      <mineSpeedFactor>0.8</mineSpeedFactor>
    </ThingDef>
    
    
    <ThingDef Name="ZF_SolidChalk" ParentName="SolidRockBase" Class="Minerals.ThingDef_SolidRock">
      <defName>ZF_SolidChalk</defName>
      <label>Solid Chalk</label>
      <description>Chalk is a fine-graned, soft, and porous type of limestone, formed from the compressed shells of microscopic sea life.</description>
      <graphicData>
        <texPath>Things/Rock/WeatheredLimestone</texPath>
        <color>(230,230,230)</color>
      </graphicData>
      <uiIconPath>Things/Rock/WeatheredLimestone/WeatheredLimestoneA</uiIconPath>
      <randomColorsOne>
        <li>(230,230,230)</li>
        <li>(232,230,230)</li>
        <li>(230,232,230)</li>
        <li>(230,230,232)</li>
      </randomColorsOne>
      <randomColorsTwo>
        <li>(225,200,180)</li>
        <li>(227,200,180)</li>
        <li>(225,202,180)</li>
        <li>(225,200,182)</li>
      </randomColorsTwo>
      <statBases>
        <MaxHitPoints>800</MaxHitPoints>
        <Flammability>0</Flammability>
        <Beauty>2</Beauty>
      </statBases>
      <building>
        <mineableThing>ZF_ChunkChalk</mineableThing>
        <mineableDropChance>0.3</mineableDropChance>
      </building>
      <!--How far away it can spawn from an existing location-->
      <!-- Even though it is a static crystal, the map initialization uses "reproduction" to make clusters-->
      <spawnRadius>1</spawnRadius>
      <!-- The probability that this mineral type will be spawned at all on a given map -->
      <perMapProbability>0</perMapProbability>
      <!--For a given map, the minimum/maximum probablility a cluster will spawn for every possible location -->
      <minClusterProbability>0</minClusterProbability>
      <maxClusterProbability>0</maxClusterProbability>
      <!-- How  many squares each cluster will be -->
      <minClusterSize>1</minClusterSize>
      <maxClusterSize>10</maxClusterSize>
      <!-- The range of starting sizes of individuals in clusters -->
      <initialSizeMin>1</initialSizeMin>
      <initialSizeMax>1</initialSizeMax>
      <!-- How much initial sizes of individuals randomly vary -->
      <initialSizeVariation>.3</initialSizeVariation>
      <!-- The terrains this can appear on. The default is rocky terrains-->
      <allowedTerrains>
  		</allowedTerrains>
      <!-- The terrains this must be near to, but not necessarily on -->
      <neededNearbyTerrains>
        <li>ZF_ChalkBase_Rough</li>
      </neededNearbyTerrains>
      <!-- how far away it can be from needed nearby terrains-->
      <neededNearbyTerrainRadius>3</neededNearbyTerrainRadius>
      <!-- If true, growth rate and initial size depends on distance from needed terrains -->
      <neededNearbyTerrainSizeEffect>false</neededNearbyTerrainSizeEffect>
      <!-- Other resources it might drop -->
      <randomlyDropResources>
        <li>
          <ResourceDefName>ZF_SharpStoneShard</ResourceDefName>
          <DropProbability>0.03</DropProbability>
          <CountPerDrop>1</CountPerDrop>
          <MinMiningSkill>4</MinMiningSkill>
        </li>
        <li>
          <ResourceDefName>ZF_ChunkFlint</ResourceDefName>
          <DropProbability>0.03</DropProbability>
          <CountPerDrop>1</CountPerDrop>
        </li>
        <li>
          <ResourceDefName>SmallFossil</ResourceDefName>
          <DropProbability>0.03</DropProbability>
          <CountPerDrop>1</CountPerDrop>
          <MinMiningSkill>10</MinMiningSkill>
        </li>
        <li>
          <ResourceDefName>CrushedStone</ResourceDefName>
          <DropProbability>1</DropProbability>
          <CountPerDrop>5</CountPerDrop>
          <WasteProduct>true</WasteProduct>
        </li>
      </randomlyDropResources>
      <!-- Things this mineral replaces when a map is initialized -->
      <ThingsToReplace>
        <li>ZF_ChalkBase</li>
        <li>ZF_HewnChalk</li>
      </ThingsToReplace>
      <!-- Tags which determine how some options behave  -->
      <tags>
        <li>rock</li>
        <li>wall</li>
        <li>solid</li>
      </tags>
      <!-- How easy it is to mine -->
      <mineSpeedFactor>0.8</mineSpeedFactor>
    </ThingDef>
    
  
    <ThingDef Name="ZF_HewnChalk" ParentName="HewnRockBase" Class="Minerals.ThingDef_StaticMineral">
      <defName>ZF_HewnChalk</defName>
      <label>Hewn Chalk</label>
      <description>Chalk is a fine-graned, soft, and porous type of limestone, formed from the compressed shells of microscopic sea life.</description>
      <graphicData>
  			<texPath>Things/Rock/HewnRockWall</texPath>
        <color>(230,230,230)</color>
      </graphicData>
      <uiIconPath>Things/Rock/HewnRockWall/HewnRockWallA</uiIconPath>
      <randomColorsOne>
        <li>(230,230,230)</li>
        <li>(232,230,230)</li>
        <li>(230,232,230)</li>
        <li>(230,230,232)</li>
      </randomColorsOne>
      <randomColorsTwo>
        <li>(225,200,180)</li>
        <li>(227,200,180)</li>
        <li>(225,202,180)</li>
        <li>(225,200,182)</li>
      </randomColorsTwo>
      <statBases>
        <MaxHitPoints>1000</MaxHitPoints>
        <Flammability>0</Flammability>
        <Beauty>1</Beauty>
      </statBases>
      <building>
        <mineableThing>ZF_ChunkChalk</mineableThing>
        <mineableDropChance>0.3</mineableDropChance>
        <smoothedThing>ZF_SmoothedHewnChalk</smoothedThing>
      </building>
      <!--How far away it can spawn from an existing location-->
      <!-- Even though it is a static crystal, the map initialization uses "reproduction" to make clusters-->
      <spawnRadius>1</spawnRadius>
      <!-- The probability that this mineral type will be spawned at all on a given map -->
      <perMapProbability>0</perMapProbability>
      <!--For a given map, the minimum/maximum probablility a cluster will spawn for every possible location -->
      <minClusterProbability>0</minClusterProbability>
      <maxClusterProbability>0</maxClusterProbability>
      <!-- How  many squares each cluster will be -->
      <minClusterSize>1</minClusterSize>
      <maxClusterSize>10</maxClusterSize>
      <!-- The range of starting sizes of individuals in clusters -->
      <initialSizeMin>1</initialSizeMin>
      <initialSizeMax>1</initialSizeMax>
      <!-- How much initial sizes of individuals randomly vary -->
      <initialSizeVariation>.3</initialSizeVariation>
      <!-- The terrains this can appear on. The default is rocky terrains-->
      <allowedTerrains>
  		</allowedTerrains>
      <!-- The terrains this must be near to, but not necessarily on -->
      <neededNearbyTerrains>
        <li>ZF_ChalkBase</li>
      </neededNearbyTerrains>
      <!-- how far away it can be from needed nearby terrains-->
      <neededNearbyTerrainRadius>3</neededNearbyTerrainRadius>
      <!-- If true, growth rate and initial size depends on distance from needed terrains -->
      <neededNearbyTerrainSizeEffect>false</neededNearbyTerrainSizeEffect>
      <!-- The maximum number of images that will be printed per square -->
      <maxMeshCount>1</maxMeshCount>
      <!-- The size range -->
      <visualSizeRange>
        <min>1.7</min>
        <max>1.8</max>
      </visualSizeRange>
      <visualClustering>1.0</visualClustering>
      <!-- between 0 and 1. 0 = uniform distribution, 1 = normal distribution -->
      <visualSpread>0.2</visualSpread>
      <!-- 1 = everything appears within cell and can spawn at edge when visualClustering == 0 -->
      <visualSizeVariation>0.2</visualSizeVariation>
      <!-- Other resources it might drop -->
      <randomlyDropResources>
        <li>
          <ResourceDefName>ZF_SharpStoneShard</ResourceDefName>
          <DropProbability>0.03</DropProbability>
          <CountPerDrop>1</CountPerDrop>
          <MinMiningSkill>4</MinMiningSkill>
        </li>
        <li>
          <ResourceDefName>ZF_ChunkFlint</ResourceDefName>
          <DropProbability>0.03</DropProbability>
          <CountPerDrop>1</CountPerDrop>
        </li>
        <li>
          <ResourceDefName>SmallFossil</ResourceDefName>
          <DropProbability>0.03</DropProbability>
          <CountPerDrop>1</CountPerDrop>
          <MinMiningSkill>10</MinMiningSkill>
        </li>
        <li>
          <ResourceDefName>CrushedStone</ResourceDefName>
          <DropProbability>1</DropProbability>
          <CountPerDrop>5</CountPerDrop>
          <WasteProduct>true</WasteProduct>
        </li>
      </randomlyDropResources>
      <!-- Things this mineral replaces when a map is initialized -->
      <ThingsToReplace>
        <li>ZF_ChalkBase</li>
      </ThingsToReplace>
      <!-- Tags which determine how some options behave  -->
      <tags>
        <li>rock</li>
        <li>wall</li>
        <li>hewn</li>
      </tags>
      <!-- How easy it is to mine -->
      <mineSpeedFactor>0.7</mineSpeedFactor>
    </ThingDef>
   
    
    <ThingDef Name="ZF_SmoothedHewnChalk" ParentName="HewnRockBase" Class="Minerals.ThingDef_StaticMineral">
      <defName>ZF_SmoothedHewnChalk</defName>
      <label>Smoothed Chalk</label>
      <description>Chalk is a fine-graned, soft, and porous type of limestone, formed from the compressed shells of microscopic sea life. This rock has been smoothed to a flat wall, revealing the beautiful wavy layers of of color and texture.</description>
      <graphicData>
  			<texPath>Things/Rock/SmoothedRockWall</texPath>
        <color>(120,50,50)</color>
      </graphicData>
      <uiIconPath>Things/Rock/SmoothedRockWall/SmoothedRockWallA</uiIconPath>
      <randomColorsOne>
        <li>(230,230,230)</li>
        <li>(232,230,230)</li>
        <li>(230,232,230)</li>
        <li>(230,230,232)</li>
      </randomColorsOne>
      <randomColorsTwo>
        <li>(225,200,180)</li>
        <li>(227,200,180)</li>
        <li>(225,202,180)</li>
        <li>(225,200,182)</li>
      </randomColorsTwo>
      <statBases>
        <MaxHitPoints>900</MaxHitPoints>
        <Flammability>0</Flammability>
        <Beauty>4</Beauty>
      </statBases>
      <building>
        <mineableThing>ZF_ChunkChalk</mineableThing>
        <mineableDropChance>0.3</mineableDropChance>
		<canBuildNonEdificesUnder>true</canBuildNonEdificesUnder>
      </building>
      <!-- Other resources it might drop -->
      <randomlyDropResources>
        <li>
          <ResourceDefName>ZF_SharpStoneShard</ResourceDefName>
          <DropProbability>0.03</DropProbability>
          <CountPerDrop>1</CountPerDrop>
          <MinMiningSkill>4</MinMiningSkill>
        </li>
        <li>
          <ResourceDefName>ZF_ChunkFlint</ResourceDefName>
          <DropProbability>0.03</DropProbability>
          <CountPerDrop>1</CountPerDrop>
        </li>
        <li>
          <ResourceDefName>SmallFossil</ResourceDefName>
          <DropProbability>0.03</DropProbability>
          <CountPerDrop>1</CountPerDrop>
          <MinMiningSkill>10</MinMiningSkill>
        </li>
        <li>
          <ResourceDefName>CrushedStone</ResourceDefName>
          <DropProbability>1</DropProbability>
          <CountPerDrop>5</CountPerDrop>
          <WasteProduct>true</WasteProduct>
        </li>
      </randomlyDropResources>
      <!-- Tags which determine how some options behave  -->
      <tags>
        <li>rock</li>
        <li>wall</li>
        <li>hewn</li>
      </tags>
      <!-- How easy it is to mine -->
      <mineSpeedFactor>0.7</mineSpeedFactor>
    </ThingDef>
  
    
    <ThingDef Name="ZF_BoulderChalk" ParentName="BoulderRockBase" Class="Minerals.ThingDef_StaticMineral">
      <defName>ZF_BoulderChalk</defName>
      <label>Chalk Boulder</label>
      <description>Chalk is a fine-graned, soft, and porous type of limestone, formed from the compressed shells of microscopic sea life.</description>
      <graphicData>
        <texPath>Things/Rock/PassableSandstone</texPath>
        <color>(230,230,230)</color>
      </graphicData>
      <uiIconPath>Things/Rock/PassableSandstone/PassableSandstoneA</uiIconPath>
      <randomColorsOne>
        <li>(230,230,230)</li>
        <li>(232,230,230)</li>
        <li>(230,232,230)</li>
        <li>(230,230,232)</li>
      </randomColorsOne>
      <randomColorsTwo>
        <li>(225,200,180)</li>
        <li>(227,200,180)</li>
        <li>(225,202,180)</li>
        <li>(225,200,182)</li>
      </randomColorsTwo>
      <fillPercent>0.6</fillPercent>
      <statBases>
        <MaxHitPoints>400</MaxHitPoints>
        <Flammability>0</Flammability>
        <Beauty>3</Beauty>
      </statBases>
      <pathCost>100</pathCost>
      <building>
        <mineableThing>ZF_ChunkChalk</mineableThing>
        <mineableDropChance>0.25</mineableDropChance>
      </building>
      <!--How far away it can spawn from an existing location-->
      <!-- Even though it is a static crystal, the map initialization uses "reproduction" to make clusters-->
      <spawnRadius>1</spawnRadius>
      <!-- The probability that this mineral type will be spawned at all on a given map -->
      <perMapProbability>1</perMapProbability>
      <!--For a given map, the minimum/maximum probablility a cluster will spawn for every possible location -->
      <minClusterProbability>0.005</minClusterProbability>
      <maxClusterProbability>0.01</maxClusterProbability>
      <!-- How  many squares each cluster will be -->
      <minClusterSize>1</minClusterSize>
      <maxClusterSize>2</maxClusterSize>
      <!-- The range of starting sizes of individuals in clusters -->
      <initialSizeMin>.7</initialSizeMin>
      <initialSizeMax>.9</initialSizeMax>
      <!-- How much initial sizes of individuals randomly vary -->
      <initialSizeVariation>.2</initialSizeVariation>
      <!-- The terrains this can appear on. The default is rocky terrains-->
  		<allowedTerrains>
  			<li>AB_CrackedMud</li>
  			<li>AB_RichCrackedMud</li>
  			<li>AB_FineSand</li>
  			<li>ZF_ChalkBase_Rough</li>
  			<li>GU_AlienSandFine</li>
  			<li>GU_AlienSand</li>
  			<li>GU_RichAlienSand</li>
  			<li>GU_MossyRed</li>
  			<li>GU_RedWaterShallow</li>
  			<li>GU_RedWaterDeep</li>
  			<li>RockySoil</li>
  			<li>Gravel</li>
  			<li>Sand</li>
  			<li>Soil</li>
  			<li>SoilRich</li>
  			<li>MarshyTerrain</li>
  			<li>MossyTerrain</li>
  			<li>Marsh</li>
  			<li>PoorSoil</li>
  			<li>MarginalSoil</li>
  			<li>Mud</li>
        <li>SavannaSoil</li>
        <li>MarginalSoil</li>
  			<li>WaterOceanShallow</li>
        <li>WaterMovingShallow</li>
  			<li>WaterShallow</li>
  			<li>Ice</li>
  		</allowedTerrains>
      <!-- The terrains this must be near to, but not necessarily on -->
      <neededNearbyTerrains>
        <li>ZF_ChalkBase_Rough</li>
        <li>ZF_WeatheredChalk</li>
        <li>ZF_SolidChalk</li>
        <li>ZF_ChalkBase</li>
      </neededNearbyTerrains>
      <!-- how far away it can be from needed nearby terrains-->
      <neededNearbyTerrainRadius>10</neededNearbyTerrainRadius>
      <!-- If true, growth rate and initial size depends on distance from needed terrains -->
      <neededNearbyTerrainSizeEffect>true</neededNearbyTerrainSizeEffect>
      <!-- Controls how extra clusters are added near assocaited ore-->
      <associatedOres>
        <li>ZF_ChalkBase_Rough</li>
        <li>ZF_WeatheredChalk</li>
        <li>ZF_ChalkBase</li>
      </associatedOres>
      <nearAssociatedOreBonus>3</nearAssociatedOreBonus>
      <!-- Roof requirements -->
      <mustBeUnderRoof>false</mustBeUnderRoof>
      <mustBeUnderThickRoof>false</mustBeUnderThickRoof>
      <mustBeUnroofed>false</mustBeUnroofed>
      <!-- The maximum number of images that will be printed per square -->
      <maxMeshCount>1</maxMeshCount>
      <!-- The size range -->
      <visualSizeRange>
        <min>1.1</min>
        <max>1.3</max>
      </visualSizeRange>
      <visualClustering>1.0</visualClustering>
      <!-- between 0 and 1. 0 = uniform distribution, 1 = normal distribution -->
      <visualSpread>0.8</visualSpread>
      <!-- 1 = everything appears within cell and can spawn at edge when visualClustering == 0 -->
      <visualSizeVariation>0.1</visualSizeVariation>
      <!-- Other resources it might drop -->
      <randomlyDropResources>
        <li>
          <ResourceDefName>ZF_SharpStoneShard</ResourceDefName>
          <DropProbability>0.03</DropProbability>
          <CountPerDrop>1</CountPerDrop>
          <MinMiningSkill>4</MinMiningSkill>
        </li>
        <li>
          <ResourceDefName>ZF_ChunkFlint</ResourceDefName>
          <DropProbability>0.03</DropProbability>
          <CountPerDrop>1</CountPerDrop>
        </li>
        <li>
          <ResourceDefName>SmallFossil</ResourceDefName>
          <DropProbability>0.03</DropProbability>
          <CountPerDrop>1</CountPerDrop>
          <MinMiningSkill>10</MinMiningSkill>
        </li>
        <li>
          <ResourceDefName>CrushedStone</ResourceDefName>
          <DropProbability>1</DropProbability>
          <CountPerDrop>5</CountPerDrop>
          <WasteProduct>true</WasteProduct>
        </li>
      </randomlyDropResources>
      <!-- Things this mineral replaces when a map is initialized -->
      <ThingsToReplace>
        <li>ZF_ChunkChalk</li>
      </ThingsToReplace>
      <!-- Tags which determine how some options behave  -->
      <tags>
        <li>rock</li>
        <li>boulder</li>
        <li>chunk_replacer</li>
      </tags>
      <!-- How easy it is to mine -->
      <mineSpeedFactor>0.8</mineSpeedFactor>
    </ThingDef>
    
  
    <ThingDef Name="ZF_PassableChalk" ParentName="SmallRockBase" Class="Minerals.ThingDef_StaticMineral">
      <defName>ZF_PassableChalk</defName>
      <label>Chalk Rocks</label>
      <description>Chalk is a fine-graned, soft, and porous type of limestone, formed from the compressed shells of microscopic sea life.</description>
      <graphicData>
        <texPath>Things/Rock/PassableSandstone</texPath>
        <color>(230,230,230)</color>
        <damageData>
          <enabled>false</enabled>
        </damageData>
      </graphicData>
      <uiIconPath>Things/Rock/PassableSandstone/PassableSandstoneA</uiIconPath>
      <randomColorsOne>
        <li>(230,230,230)</li>
        <li>(232,230,230)</li>
        <li>(230,232,230)</li>
        <li>(230,230,232)</li>
      </randomColorsOne>
      <randomColorsTwo>
        <li>(225,200,180)</li>
        <li>(227,200,180)</li>
        <li>(225,202,180)</li>
        <li>(225,200,182)</li>
      </randomColorsTwo>
      <fillPercent>0.3</fillPercent>
      <statBases>
        <MaxHitPoints>300</MaxHitPoints>
        <Flammability>0</Flammability>
        <Beauty>1</Beauty>
      </statBases>
      <pathCost>20</pathCost>
      <building>
        <mineableThing>ZF_ChunkChalk</mineableThing>
        <mineableDropChance>0.2</mineableDropChance>
      </building>
      <!--How far away it can spawn from an existing location-->
      <!-- Even though it is a static crystal, the map initialization uses "reproduction" to make clusters-->
      <spawnRadius>1</spawnRadius>
      <!-- The probability that this mineral type will be spawned at all on a given map -->
      <perMapProbability>1</perMapProbability>
      <!--For a given map, the minimum/maximum probablility a cluster will spawn for every possible location -->
      <minClusterProbability>0.02</minClusterProbability>
      <maxClusterProbability>0.03</maxClusterProbability>
      <!-- How  many squares each cluster will be -->
      <minClusterSize>1</minClusterSize>
      <maxClusterSize>4</maxClusterSize>
      <!-- The range of starting sizes of individuals in clusters -->
      <initialSizeMin>0.5</initialSizeMin>
      <initialSizeMax>1.0</initialSizeMax>
      <!-- How much initial sizes of individuals randomly vary -->
      <initialSizeVariation>.2</initialSizeVariation>
      <!-- The terrains this can appear on. The default is rocky terrains-->
  		<allowedTerrains>
  			<li>AB_CrackedMud</li>
  			<li>AB_FineSand</li>
  			<li>ZF_ChalkBase_Rough</li>
  			<li>GU_AlienSandFine</li>
  			<li>GU_AlienSand</li>
  			<li>GU_RichAlienSand</li>
  			<li>GU_MossyRed</li>
  			<li>GU_RedWaterShallow</li>
  			<li>GU_RedWaterDeep</li>
  			<li>RockySoil</li>
  			<li>Gravel</li>
  			<li>Sand</li>
  			<li>Soil</li>
  			<li>PoorSoil</li>
  			<li>MarginalSoil</li>
  			<li>MarshyTerrain</li>
  			<li>MossyTerrain</li>
  			<li>Marsh</li>
  			<li>Mud</li>
        <li>SavannaSoil</li>
        <li>WaterShallow</li>
        <li>WaterMovingShallow</li>
  			<li>WaterOceanShallow</li>
  			<li>Ice</li>
  			<li>SaltField</li>
  		</allowedTerrains>
      <!-- The terrains this must be near to, but not necessarily on -->
      <neededNearbyTerrains>
        <li>ZF_BoulderChalk</li>
  			<li>ZF_ChalkBase_Rough</li>
        <li>ZF_WeatheredChalk</li>
        <li>ZF_SolidChalk</li>
        <li>ZF_ChalkBase</li>
      </neededNearbyTerrains>
      <!-- how far away it can be from needed nearby terrains-->
      <neededNearbyTerrainRadius>4</neededNearbyTerrainRadius>
      <!-- If true, growth rate and initial size depends on distance from needed terrains -->
      <neededNearbyTerrainSizeEffect>true</neededNearbyTerrainSizeEffect>
      <!-- Controls how extra clusters are added near assocaited ore-->
      <associatedOres>
        <li>ZF_BoulderChalk</li>
        <li>ZF_WeatheredChalk</li>
        <li>ZF_ChalkBase</li>
      </associatedOres>
      <nearAssociatedOreBonus>3</nearAssociatedOreBonus>
      <!-- Roof requirements -->
      <mustBeUnderRoof>false</mustBeUnderRoof>
      <mustBeUnderThickRoof>false</mustBeUnderThickRoof>
      <mustBeUnroofed>false</mustBeUnroofed>
      <!-- The maximum number of images that will be printed per square -->
      <maxMeshCount>2</maxMeshCount>
      <!-- The size range -->
      <visualSizeRange>
        <min>0.5</min>
        <max>0.7</max>
      </visualSizeRange>
      <!-- between 0 and 1. 0 = uniform distribution, 1 = normal distribution -->
      <visualClustering>0.3</visualClustering>
      <!-- 1 = everything appears within cell and can spawn at edge when visualClustering == 0 -->
      <visualSpread>1.2</visualSpread>
      <visualSizeVariation>0.3</visualSizeVariation>
      <!-- Other resources it might drop -->
      <randomlyDropResources>
        <li>
          <ResourceDefName>ZF_SharpStoneShard</ResourceDefName>
          <DropProbability>0.03</DropProbability>
          <CountPerDrop>1</CountPerDrop>
          <MinMiningSkill>4</MinMiningSkill>
        </li>
        <li>
          <ResourceDefName>ZF_ChunkFlint</ResourceDefName>
          <DropProbability>0.03</DropProbability>
          <CountPerDrop>1</CountPerDrop>
        </li>
        <li>
          <ResourceDefName>SmallFossil</ResourceDefName>
          <DropProbability>0.03</DropProbability>
          <CountPerDrop>1</CountPerDrop>
          <MinMiningSkill>10</MinMiningSkill>
        </li>
        <li>
          <ResourceDefName>CrushedStone</ResourceDefName>
          <DropProbability>1</DropProbability>
          <CountPerDrop>5</CountPerDrop>
          <WasteProduct>true</WasteProduct>
        </li>
      </randomlyDropResources>
      <!-- How easy it is to mine -->
      <mineSpeedFactor>1.2</mineSpeedFactor>
    </ThingDef>



</Defs>